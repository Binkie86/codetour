{
  "title": "Tree View",
  "description": "This is a guided walkthrough of how the CodeTour tree view works",
  "steps": [
    {
      "file": "src/extension.ts",
      "line": 35,
      "description": "Upon extension activation, we register the tree view provider"
    },
    {
      "file": "src/tree/index.ts",
      "line": 50,
      "description": "### Test Heading\n\nThe tree is registered with the `codetour.tours` view ID, which is declared in the extension's `package.json` file."
    },
    {
      "file": "package.json",
      "line": 200,
      "description": "This view registration declares that the code tours tree view should be placed within the `Explorer` activity tab."
    },
    {
      "file": "src/tree/index.ts",
      "line": 22,
      "description": "Once created, the tree starts watching for changes to the store, so that it can update dyamically."
    },
    {
      "file": "src/tree/index.ts",
      "line": 39,
      "description": "The tree returns a list of nodes, one for each of the main and sub tours within the store."
    },
    {
      "file": "src/tree/nodes.ts",
      "line": 12,
      "description": "### Headings \n\nThe nodes returned by the tree use the tour's title and description as it's display properties. Additionally, the node specifies the `codetour.startStart` command as its click-behavior."
    },
    {
      "file": "src/commands.ts",
      "line": 24,
      "description": "When a node is clicked in the tree view, it will pass the target tour and simply start it."
    }
  ]
}